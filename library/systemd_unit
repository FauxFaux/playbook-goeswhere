#!/usr/bin/env python3

def main():
    module = AnsibleModule(
        argument_spec=dict(
            src=dict(required=True, type='path'),
            dest=dict(type='path'),
            restart=dict(type='bool', default=True)
        ),
        supports_check_mode=True
    )

    src = module.params['src']
    dest = module.params['dest']
    restart = module.params['restart']

    service_name = os.path.basename(dest)

    changed = False

    if src:
        # if this is set, the plugin has copied the file and given us
        # the path of the temporary file

        if module.check_mode:
            module.exit_json(changed=True)

        shutil.move(src, dest)
        changed = True
        subprocess.check_call(['systemctl', 'daemon-reload'])

    try:
        enabled = is_enabled(service_name)
    except Exception as e:
        module.fail_json(msg=e)

    if not enabled:
        if module.check_mode:
            module.exit_json(changed=True)

        subprocess.check_call(['systemctl', 'enable', service_name])
        changed = True

    if changed and restart:
        subprocess.check_call(['systemctl', 'restart', service_name])

    module.exit_json(changed=changed)


def is_enabled(service_name):
    try:
        return "enabled" == subprocess.check_output(['systemctl', 'is-enabled', service_name]).decode('utf-8').strip()
    except subprocess.CalledProcessError as e:
        output = e.output.decode('utf-8').strip()
        if output in ['disabled', 'masked', 'static']:
            return False
        raise Exception('systemctl is-enabled doesn\'t know about ' + service_name + ': ' + output, e)


# import module snippets
from ansible.module_utils.basic import *

main()
